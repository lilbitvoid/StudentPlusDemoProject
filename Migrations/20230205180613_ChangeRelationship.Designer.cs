// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudentPlusDemoProject.Contexts;

#nullable disable

namespace StudentPlusDemoProject.Migrations
{
    [DbContext(typeof(StudentContext))]
    [Migration("20230205180613_ChangeRelationship")]
    partial class ChangeRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LessonTeacher", b =>
                {
                    b.Property<int>("LessonTeacherId")
                        .HasColumnType("integer");

                    b.Property<int>("TeacherLessonsId")
                        .HasColumnType("integer");

                    b.HasKey("LessonTeacherId", "TeacherLessonsId");

                    b.HasIndex("TeacherLessonsId");

                    b.ToTable("LessonTeacher");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Absenteeism", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Absenteeism");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<char>("GenderChar")
                        .HasColumnType("character(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("StudentGradeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentGradeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("YearGroupCreate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.PersonInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsOrphan")
                        .HasColumnType("boolean");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonGenderId")
                        .HasColumnType("integer");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonGenderId");

                    b.ToTable("PersonInfos");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AbsenteeismId")
                        .HasColumnType("integer");

                    b.Property<int>("ContactInfoId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentPersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AbsenteeismId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("StudentPersonId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TeacherContactId")
                        .HasColumnType("integer");

                    b.Property<int>("TeacherPersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeacherContactId");

                    b.HasIndex("TeacherPersonId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Password")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LessonTeacher", b =>
                {
                    b.HasOne("StudentPlusDemoProject.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("LessonTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentPlusDemoProject.Models.Lesson", null)
                        .WithMany()
                        .HasForeignKey("TeacherLessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Grade", b =>
                {
                    b.HasOne("StudentPlusDemoProject.Models.Student", "StudentGrade")
                        .WithMany()
                        .HasForeignKey("StudentGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentGrade");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Lesson", b =>
                {
                    b.HasOne("StudentPlusDemoProject.Models.Grade", null)
                        .WithMany("LessonGrade")
                        .HasForeignKey("GradeId");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.PersonInfo", b =>
                {
                    b.HasOne("StudentPlusDemoProject.Models.Gender", "PersonGender")
                        .WithMany()
                        .HasForeignKey("PersonGenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonGender");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Student", b =>
                {
                    b.HasOne("StudentPlusDemoProject.Models.Absenteeism", null)
                        .WithMany("AbsentStudents")
                        .HasForeignKey("AbsenteeismId");

                    b.HasOne("StudentPlusDemoProject.Models.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentPlusDemoProject.Models.Group", "StudentGroup")
                        .WithMany()
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentPlusDemoProject.Models.PersonInfo", "StudentPerson")
                        .WithMany()
                        .HasForeignKey("StudentPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactInfo");

                    b.Navigation("StudentGroup");

                    b.Navigation("StudentPerson");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Teacher", b =>
                {
                    b.HasOne("StudentPlusDemoProject.Models.ContactInfo", "TeacherContact")
                        .WithMany()
                        .HasForeignKey("TeacherContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentPlusDemoProject.Models.PersonInfo", "TeacherPerson")
                        .WithMany()
                        .HasForeignKey("TeacherPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherContact");

                    b.Navigation("TeacherPerson");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Absenteeism", b =>
                {
                    b.Navigation("AbsentStudents");
                });

            modelBuilder.Entity("StudentPlusDemoProject.Models.Grade", b =>
                {
                    b.Navigation("LessonGrade");
                });
#pragma warning restore 612, 618
        }
    }
}
